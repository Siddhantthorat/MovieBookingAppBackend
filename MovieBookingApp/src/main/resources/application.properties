server.port=8081
#spring.profiles.active=dev
#spring.data.mongodb.uri=mongodb://host.docker.internal:27017/MovieBookingApp
#spring.data.mongodb.uri=mongodb://localhost:27017/MovieBookingApp
spring.data.mongodb.uri=mongodb+srv://siddhant:siddhant@moviebookingappcluster.w60qw.mongodb.net/MovieBookingApp
# we can use profile as well for creating to seperate application properties for
# ex: spring.profiles.active=dev for local environment
# ex: spring.profiles.active=docker for docker environment
#in docker while running we can specify command below
#docker run -d -p 8082:8081 --name moviebookingapp-container -e "SPRING_PROFILE_ACTIVE=docker" moviebookingimage




#spring.data.mongodb.database=MovieBookingApp
spring.application.name=MovieBookingApp
spring.kafka.bootstrap-servers=localhost:9092

